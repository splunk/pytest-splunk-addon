##
## SPDX-FileCopyrightText: 2021 Splunk, Inc. <sales@splunk.com>
## SPDX-License-Identifier: LicenseRef-Splunk-1-2020
##
##
## Deployment File which creates Splunk Container
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: test-runner
  name: test-runner
  namespace: splunk-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-runner
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
      labels:
        app: test-runner
    spec:
      volumes:
      - name: "psa"
        emptyDir: {}
      initContainers:
      - name: addon-download
        image: ubuntu:latest
        volumeMounts:
          - mountPath: /pytest-splunk-addon
            name: "psa"
        command: [ "/bin/sh" ]
        args: 
          - "-c"
          - |
            apt-get -y update ;
            apt-get install -y git ;
            mkdir -p ~/.ssh && ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts ;
            git clone https://github.com/splunk/pytest-splunk-addon.git -b test/poc-k8s-migration pytest-splunk-addon
            cp -r pytest-splunk-addon/ psa/
      containers:
      - name: test-runner
        image: ubuntu:latest
        ports:
          - containerPort: 80
        volumeMounts:
          - mountPath: /pytest-splunk-addon
            name: "psa"
        command: [ "/bin/bash" ]
        args: 
          - "-c"
          - |
            cd pytest-splunk-addon ;
            ls -al

            export DEBIAN_FRONTEND=noninteractive ;
            apt-get -y update ;
            apt-get install -y --no-install-recommends apt-utils ;
            apt-get install -y locales ;
            apt-get install -y build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev python-openssl git python-is-python3 python3-distutils python3-pip ;
            apt install -y libgdbm-dev libnss3-dev libffi-dev;
            # wget https://www.python.org/ftp/python/3.7.8/Python-3.7.8.tgz;
            # tar -xf Python-3.7.8.tgz;
            # cd Python-3.7.8;
            # ./configure --enable-optimizations;
            # make install;
            # python3 -V;

            # while true;
            # do curl -k https://spl-service.splunk-deployment.svc.cluster.local:8088/services/collector \
            #   -H "Authorization: Splunk 9b741d03-43e9-4164-908b-e09102327d22" \
            #   -d '{"event": "Splunk readiness test event.", "sourcetype": "manual"}' &&\
            # break;
            # sleep 5;
            # done;
            
            cd /pytest-splunk-addon ;
            ls -al ;
            cp pytest-ci.ini pytest.ini ;

            curl https://pyenv.run | bash ;
            export PATH="$HOME/.pyenv/bin:$PATH" ;
            eval "$(pyenv init -)" ;
            # eval "$(pyenv virtualenv-init -)" ;
            # pyenv install 3.7.8 ;
            # pyenv local 3.7.8 ;
            curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python ;
            export PATH="$HOME/.poetry/bin:$PATH" ;
            export PATH="$HOME/.poetry/env:$PATH" ;
            source $HOME/.poetry/env ;
            # pip install poetry;
            poetry install ;
            # poetry run coverage run --source=./pytest_splunk_addon/standard_lib -m pytest -v tests/unit ;
            # poetry run coverage html ;
            poetry run pytest -vv -s --splunk-version=8.0.0 -m docker -k test_splunk_app_broken ;
