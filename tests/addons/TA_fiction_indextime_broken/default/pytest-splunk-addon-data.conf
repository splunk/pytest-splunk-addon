##Total Tests
##45
##Passed 26
##Failed 13
##Skipped 6

##Search Time Tests
##4 Passed
##6 Skipped

##Common Test
##1 Failed (Find untokenised values in events)

##This should fail:
##breaking configuration is wrong (line breaker should break)
##Total 5 Tests
##2 Keyfields Passed
##2 _time Failed
##1 Line_Breaker Failed
[scripted_input_line_breaking.samples]
sourcetype = test:indextime:scripted_input_line_breaking
host_type = plugin
input_type = scripted_input
source = pytest-splunk-addon:scripted_input
sourcetype_to_search = test:indextime:scripted_input_line_breaking
expected_event_count = 4
earliest = -60m
timestamp_type = event

token.0.token = (\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d+Z)
token.0.replacementType = timestamp
token.0.replacement = %Y-%m-%dT%H:%M:%SZ
token.0.field=_time

token.1.token = ##token_list_all##
token.1.replacementType = all
token.1.replacement = list["a","b"]

token.2.token = ##token_src_port##
token.2.replacementType = random
token.2.replacement = src_port
token.2.field = src_port

token.3.token = ##token_dest_port##
token.3.replacementType = random
token.3.replacement = dest_port
token.3.field = dest_port

token.4.token = ##token_dest_ipv4##
token.4.replacementType = random
token.4.replacement = dest["ipv4"]
token.4.field = dest

token.5.token = ##token_src_ipv4##
token.5.replacementType = random
token.5.replacement = src["ipv4"]
token.5.field = src

token.6.token = (\d{2}-\d{2}-\d{4}T\d{2}:\d{2}:\d{2})
token.6.replacementType = timestamp
token.6.replacement = %d-%m-%YT%H:%M:%S

##This should fail:
##_time: wrong field is assigned _time
##key_fields: src values should mismatch while dest is not available
##Total 3 Tests
##1 Keyfields Failed
##1 _time Failed
##1 Line_Breaker Passed
[scripted_input_key_fields.samples]
sourcetype = test:indextime:scripted_input_key_fields
host_type = plugin
input_type = file_monitor
source = pytest-splunk-addon:file_monitor
sourcetype_to_search = test:indextime:scripted_input_key_fields
expected_event_count = 2
earliest = -60m
timestamp_type = event

token.0.token = (\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d+Z)
token.0.replacementType = timestamp
token.0.replacement = %Y-%m-%dT%H:%M:%SZ
token.0.field=_time

token.1.token = ##token_list##
token.1.replacementType = random
token.1.replacement = list["a","b"]

token.2.token = ##token_src_port##
token.2.replacementType = random
token.2.replacement = src_port
token.2.field = src_port

token.3.token = ##token_dest_port##
token.3.replacementType = random
token.3.replacement = dest_port
token.3.field = dest_port

token.4.token = ##token_dest_ipv4##
token.4.replacementType = random
token.4.replacement = dest["ipv4"]
token.4.field = dest

token.5.token = ##token_src_ipv4##
token.5.replacementType = random
token.5.replacement = src["ipv4"]
token.5.field = src

token.6.token = (\d{2}-\d{2}-\d{4}T\d{2}:\d{2}:\d{2})
token.6.replacementType = timestamp
token.6.replacement = %Y-%m-%dT%H:%M:%SZ


##To validate that plugin does not throw an error when
##timestamp_type=event but token.n.field = _time not provided
##count param provided but is not used
##Total 2 Tests
##1 _time Failed
##1 Line_Breaker Passed
[no_time_provided_when_type_event.samples]
sourcetype = test:indextime:no_time_provided_when_type_event
host_type = plugin
input_type = file_monitor
source = pytest-splunk-addon:file_monitor
sourcetype_to_search = test:indextime:no_time_provided_when_type_event
expected_event_count = 2
timestamp_type = event
count=240

token.0.token = (\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d+Z)
token.0.replacementType = timestamp
token.0.replacement = %Y-%m-%dT%H:%M:%SZ

token.1.token = ##host_value##
token.1.replacementType = random
token.1.replacement = host['host']

token.2.token = ##any_token##
token.2.replacementType = static
token.2.replacement = any_value

##To validate that plugin does not throw an error when
##host_type=event but token.n.field = host not provided
##count param provided but is not used
##Total 2 Tests
##1 _time Failed
##1 Line_Breaker Passed
[no_host_provided_when_type_event.samples]
sourcetype = test:indextime:no_host_provided_when_type_event
host_type = event
input_type = file_monitor
source = pytest-splunk-addon:file_monitor
sourcetype_to_search = test:indextime:no_host_provided_when_type_event
expected_event_count = 2
timestamp_type = event
count=240

token.0.token = (\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d+Z)
token.0.replacementType = timestamp
token.0.replacement = %Y-%m-%dT%H:%M:%SZ
token.0.field = _time

token.1.token = ##host_value##
token.1.replacementType = random
token.1.replacement = host['host']

token.2.token = ##any_token##
token.2.replacementType = static
token.2.replacement = any_value


##This should fail:
##expected_event_count configuration is wrong
##_time is assigned in a incorrect field
##key_field src is provided which is not present in this samples
##Total 5 Tests
##2 Keyfields Failed
##2 _time Failed
##1 Line_Breaker Failed
[failing.samples]
sourcetype = test:indextime:failing
host_type = plugin
input_type = file_monitor
source = pytest-splunk-addon:file_monitor
sourcetype_to_search = test:indextime:failing
expected_event_count = 2
earliest = -60m
timestamp_type = event

token.0.token = (\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d+Z)
token.0.replacementType = timestamp
token.0.replacement = %Y-%m-%dT%H:%M:%SZ

token.1.token = ##token_list_all##
token.1.replacementType = all
token.1.replacement = list["a","b"]

token.2.token = ##token_src_port##
token.2.replacementType = random
token.2.replacement = src_port
token.2.field = src_port

token.3.token = ##token_dest_port##
token.3.replacementType = random
token.3.replacement = dest_port
token.3.field = dest_port

token.4.token = ##token_dvc_ipv4##
token.4.replacementType = random
token.4.replacement = dvc["ipv4"]
token.4.field = dvc

token.5.token = ##token_user_name##
token.5.replacementType = random
token.5.replacement = user["name"]
token.5.field = user

token.6.token = ##token_email##
token.6.replacementType = random
token.6.replacement = email

token.7.token = ##token_dest_ipv4##
token.7.replacementType = random
token.7.replacement = dest["ipv4"]
token.7.field = dest

token.8.token = ##token_src_ipv4##
token.8.replacementType = random
token.8.replacement = src["ipv4"]
token.8.field = src

token.9.token = (\d{2}-\d{2}-\d{4}T\d{2}:\d{2}:\d{2})
token.9.replacementType = timestamp
token.9.replacement = %d-%m-%YT%H:%M:%S
token.9.field=_time


##To validate that:
##when timestamp_type=plugin no test for _time generates
##wrong regex match does not replace token
##Total 1 Tests
##1 Line_Breaker Passed
[regex_that_does_not_match.samples]
sourcetype = test:indextime:regex_that_does_not_match
host_type = plugin
input_type = file_monitor
source = pytest-splunk-addon:file_monitor
sourcetype_to_search = test:indextime:regex_that_does_not_match
expected_event_count = 2
timestamp_type = plugin

token.0.token = (\d{4}-\d{2}-\d{2}\d{2}:\d{2}:\d{2}\.\d+Z)
token.0.replacementType = timestamp
token.0.replacement = %Y-%m-%dT%H:%M:%SZ

token.1.token = ##host_value##
token.1.replacementType = random
token.1.replacement = host['host']

token.2.token = ##any_token##
token.2.replacementType = static
token.2.replacement = any_value

token.3.token = this is wrong_regxx=(##\w+##)
token.3.replacementType = static
token.3.replacement = replace_no

token.4.token = this is correct_regex=(##\w+##)
token.4.replacementType = static
token.4.replacement = replace_yes

## This sample file does not exist, It should raise a warning but should not affect the indextime testing.
##Total Tests 0
[sample_file_does_not_exist.samples]
sourcetype = test:indextime:sample_file_does_not_exist
host_type = plugin
input_type = default
source = pytest-splunk-addon:default
sourcetype_to_search = test:indextime:sample_file_does_not_exist
expected_event_count = 1
timestamp_type = event

token.0.token = (\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d+)
token.0.replacementType = timestamp
token.0.replacement = %Y-%m-%dT%H:%M:%S
token.0.field = _time


## This sample file is empty, It should raise a warning but should not affect the indextime testing.
##Total Tests 0
[this_file_is_empty.samples]
sourcetype = test:indextime:this_file_is_empty
host_type = plugin
input_type = file_monitor
source = pytest-splunk-addon:file_monitor
sourcetype_to_search = test:indextime:this_file_is_empty
expected_event_count = 1
timestamp_type = event

token.0.token = (\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d+)
token.0.replacementType = timestamp
token.0.replacement = %Y-%m-%dT%H:%M:%S
token.0.field = _time


## Empty line at the end of sample file, It should not affect indextime testing plugin should ignore this.
##Total Tests 3
##2 _time Passed
##1 Line_Breaker Passed
[token_not_in_sample.samples]
sourcetype = test:indextime:token_not_in_sample
host_type = plugin
input_type = modinput
source = pytest-splunk-addon:file_monitor
sourcetype_to_search = test:indextime:token_not_in_sample
expected_event_count = 2
timestamp_type = event
timezone = 0000

token.0.token = (\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d+)
token.0.replacementType = timestamp
token.0.replacement = %Y-%m-%dT%H:%M:%S
token.0.field = _time

token.1.token = ##token_static_field##
token.1.replacementType = static
token.1.replacement = token_static_field

## This token does not exist, It should raise a warning but should not affect indextime testing plugin should ignore this.
token.2.token = ##token_not_in_sample##
token.2.replacementType = static
token.2.replacement = token_not_in_sample


## Testcase test_hash_indextime will fail for this scenario.
##Total Tests 2
##1 _time Passed
##1 Line_Breaker Passed
[token_not_in_stanza.samples]
sourcetype = test:indextime:token_not_in_stanza
host_type = plugin
input_type = file_monitor
source = pytest-splunk-addon:file_monitor
sourcetype_to_search = test:indextime:token_not_in_stanza
expected_event_count = 2
timestamp_type = event

token.0.token = (\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d+)
token.0.replacementType = timestamp
token.0.replacement = %Y-%m-%dT%H:%M:%S
token.0.field = _time


## Empty line at the end of sample file, It should not affect indextime testing plugin should ignore this.
##Total Tests 9
##4 Keyfields Passed
##4 _time Passed
##1 Line_Breaker Passed
[skip_token_or_empty_line.samples]
sourcetype = test:indextime:sourcetype:skip_token_or_empty_line
host_type = plugin
input_type = modinput
earliest = -45m
latest = -15m
source = pytest-splunk-addon:modinput
sourcetype_to_search = test:indextime:sourcetype:skip_token_or_empty_line
expected_event_count = 4
timestamp_type = event

token.0.token = (\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d+)
token.0.replacementType = timestamp
token.0.replacement = %Y-%m-%dT%H:%M:%S
token.0.field = _time

token.1.token = ##token_user_name##
token.1.replacementType = random
token.1.replacement = user["name"]
token.1.field = user

#token.2.token = ##token_file_all_dependent##
#token.2.replacementType = mvfile
#token.2.replacement = $SPLUNK_HOME/etc/apps/TA_fiction_indextime/samples/dependent_file.sample:1

token.3.token = @@tokenemail
token.3.replacementType = random
token.3.replacement = email

#token.4.token = ##token_file_random_dependent##
#token.4.replacementType = mvfile
#token.4.replacement = $SPLUNK_HOME/etc/apps/TA_fiction_indextime/samples/dependent_file.sample:2

## In this stanza every value for metadata and rule is intentionally provided wrong to raise a warning
## It should not affect indextime testing plugin should ignore this
##Total Tests 2
##1 Keyfields Passed
##1 Line_Breaker Passed
[wrong_values.samples]
sourcetype = test:indextime:sourcetype:wrong_values
sourcetype_to_search = test:indextime:sourcetype:wrong_values
host_type = wrong
input_type = wrong
expected_event_count = wrong
timestamp_type = wrong
earliest = wrong
latest = wrong
timezone = wrong

token.0.token = (\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d+)
token.0.replacementType = timestamp
token.0.replacement = %Y-%m-%dT%H:%M:%S
token.0.field = _time

token.1.token = ##int_wrong##
token.1.replacementType = random
token.1.replacement = integer[1:5n]

token.2.token = ##token_user_name##
token.2.replacementType = random
token.2.replacement = user["namex"]
token.2.field = user

token.3.token = ##user_no_all##
token.3.replacementType = all
token.3.replacement = user["email"]
token.3.field = user

token.4.token = ##no_rule##
token.4.replacementType = random
token.4.replacement = wrong_rule

token.5.token = ##token_incorrect_url##
token.5.replacementType = random
token.5.replacement = url["wrong"]

token.6.token = ##float_wrong##
token.6.replacementType = random
token.6.replacement = float[1.00:5.00n]

token.7.token = ##list_wrong##
token.7.replacementType = random
token.7.replacement = list

token.8.token = ##url_wrong##
token.8.replacementType = random
token.8.replacement = url[]

token.9.token = ##src1##
token.9.replacementType = random
token.9.replacement = src

token.10.token = ##src2##
token.10.replacementType = random
token.10.replacement = dest[]

token.11.token = ##src3##
token.11.replacementType = random
token.11.replacement = dvc["asda"]

token.12.token = ##src4##
token.12.replacementType = random
token.12.replacement = host[""]

token.13.token = ##hex_wrong##
token.13.replacementType = random
token.13.replacement = hex(123

token.14.token = ##wrong_rt##
token.14.replacementType = wrong
token.14.replacement = hex(123)

token.15.token = ##hex_non_numeric##
token.15.replacementType = random
token.15.replacement = hex(abc)


