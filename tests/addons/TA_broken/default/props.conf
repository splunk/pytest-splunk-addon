# Component tested: sourcetype
# Scenario: The sourcetype doesn't exist so the field will not be extracted
# Expected result: FAIL
[notvalid]
EXTRACT-broken-one = group=(?<FAIL_extractone>[^,]+)

[splunkd]
# Component tested: EVAL+
# Scenario: As EVAL-two field is depend on EVAL-one field, two field events will be never present, the test case will fail for two field.
# Expected result: FAIL
EVAL-PASS_one = "working"
EVAL-FAIL_two = one

# Component tested: EXTRACT
# Scenario: source_field is used from EVAL and will not be available in splunk hence this extracting fields from it would fail.
# Expected result: FAIL
EVAL-PASS_used_in_extract = "use_this_in_extract"
EXTRACT-broken-FAIL_incorrect_extract = (?<FAIL_incorrect_extract>.*) in PASS_used_in_extract
# Component tested: EXTRACT
# Scenario: Here in is used as a regex and hotWarmPath is not a SOURCE_KEY hence in should be enclosed as [i]n
# Expected result: FAIL
EXTRACT-broken-FAIL_broken_one = (?<FAIL_broken_extract>.*) in hotWarmPath

# Component tested: LOOKUP
# Scenario: Without lookup name 
# Expected result: FAIL
LOOKUP-FAIL_test_no_lookup = component OUTPUT FAIL_broken_context_test

# Component tested: LOOKUP
# Scenario: With non-existing lookup name  
# Expected result: FAIL
LOOKUP-FAIL_test_nonexistent_lookup = broken-Lookup_NAN PASS_component OUTPUT FAIL_broken_context_test_1

# Component tested: LOOKUP
# Scenario: Lookup without input field so the output_fields will not be there.
# Expected result: FAIL
LOOKUP-FAIL_test_no_inputfield = ta_broken_lookup OUTPUT FAIL_broken_context_test_2

# Component tested: LOOKUP
# Scenario: non_existing output_field with output/outputnew so the tests for output_field will fail.
# Expected result: FAIL
LOOKUP-FAIL_test_wrong_output = ta_broken_lookup FAIL_component FAIL_output FAIL_non_existing
LOOKUP-FAIL_test_wrong_as_field_name_output = ta_broken_lookup FAIL_component FAIL_output as_port as FAIL_non_existing
LOOKUP-FAIL_test_wrong_AS_field_name_output = ta_broken_lookup FAIL_component FAIL_output AS_port as FAIL_non_existing
LOOKUP-FAIL_test_wrong_outputnew = ta_broken_lookup FAIL_component FAIL_outputnew FAIL_non_existing_1

# Component tested: LOOKUP
# Scenario: Empty lookup file so no tests are generated for the output_fields.
# Expected result: PASS
LOOKUP-PASS_test_empty_csv = broken-empty_lookup FAIL_component FAIL_broken_context_test_3

# Component tested: LOOKUP
# Scenario: Wrong lookup file and no output fields
# Expected result: PASS
LOOKUP-PASS_test_lookup_not_found = broken-NaN_lookup FAIL_component FAIL_broken_context_test_4


REPORT-broken-FAIL_tsc-delim-fields = broken-tsc-delim-fields
REPORT-broken-PASS_tsc-sk-regex-format = broken-tsc-sk-regex-format
REPORT-broken-FAIL_tsc-sk-delim-format = broken-contact_mode_extract
# If a non_existing stanza is present then no testcases are generated for it.
REPORT-broken-FAIL_tsc-regex-format = broken-tsc-regex-format, broken-non_existing_transforms_stanza

# Component tested: FIELDALIAS
# Scenario: Plugin searches for the original field and one or more alias field names.
# Expected result: PASS
FIELDALIAS-broken-one = name AS PASS_aliasone

# Component tested: FIELDALIAS
# Scenario: Plugin searches for the original field and one or more alias field names.
# Expected result: FAIL
FIELDALIAS-broken-two = FAIL_nofield AS FAIL_aliasone
FIELDALIAS-broken-three = FAIL_one AS FAIL_aliasthree