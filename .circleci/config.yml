#COPYRIGHT SPLUNK, Inc 2020

version: 2.1
orbs:
  go: circleci/go@0.2.0
  win: circleci/windows@2.4.0

executors:
  linux: # linux executor using the node base image
    machine:
      image: ubuntu-1604:202007-01
      docker_layer_caching: true
    resource_class: xlarge
  windows: win/default
  macos: # macos executor using xcode 11.6
    macos:
      xcode: 12

jobs:
  test-compose:
    parameters:
      os:
        type: executor
      python:
        type: string
    executor: << parameters.os >>

    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - run: cd /opt/circleci/.pyenv/plugins/python-build/../.. && git pull && cd -
      - run:
          name: Install Tools
          command: |
            pyenv install -s << parameters.python >>
            pyenv local << parameters.python >>
            curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
      - run: docker login -u $DOCKER_USER -p $DOCKER_TOKEN
      - restore_cache:
          keys:
            - poetry-cache-<< parameters.python >>-{{ checksum "poetry.lock" }}
      - run:
          name: Build
          command: |
            pip3 install poetry-dynamic-versioning tomlkit
            poetry-dynamic-versioning
            source $HOME/.poetry/env
            pyenv local << parameters.python >>
            poetry install --no-ansi -E docker
            mkdir -p test-results || true
            poetry run pytest tests -v --tb=long --junitxml=test-results/test.xml
          no_output_timeout: 90m
      - save_cache:
          key: poetry-cache-<< parameters.python >>-{{ checksum "poetry.lock" }}
          paths:
            - ~/.poetry
      - store_artifacts:
          path: test-results
          destination: test-results
      - store_test_results:
          path: test-results
  tag:
    parameters:
      semtag:
        type: string
    docker:
      - image: circleci/python:3.7
    environment:
      SEMTAG: "<< parameters.semtag >>"
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "7c:e9:cc:8d:8e:4d:9c:17:1d:e3:96:23:ce:bd:a4:c3"
      - checkout
      - run:
          name: TAG
          command: |
            ./semtag ${SEMTAG} -f

  merge-beta-to-master:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "7c:e9:cc:8d:8e:4d:9c:17:1d:e3:96:23:ce:bd:a4:c3"
      - checkout
      - run:
          name: Merge
          command: |
            git config --global user.email "addonreleasesrv@splunk.com"
            git config --global user.name "Add on release service"
            git pull origin main
            git merge main -m "Merge from main"
            git checkout main
            git merge << pipeline.git.revision >>
            git push

  publish:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - restore_cache:
          keys:
            - poetry-cache-{{ checksum "poetry.lock" }}
      - run:
          name: Install Tools
          command: |
            curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
      - run:
          name: Build
          command: |
            #
            source $HOME/.poetry/env
            pip install poetry-dynamic-versioning
            poetry-dynamic-versioning
            poetry publish --build -u $PYPI_USER -p $PYPI_TOKEN
      - save_cache:
          key: poetry-cache-{{ checksum "poetry.lock" }}
          paths:
            - ~/.poetry
      - store_artifacts:
          path: dist
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
          # taken to be the root directory of the workspace.
          root: .
          # Must be relative path from root
          paths:
            - dist

workflows:
  build:
    jobs:
      - test-compose:
          context:
            - gdi-addon-python
          matrix:
            parameters:
              os: [linux]
              python: ["3.7.9", "3.8.6"]
          filters:
            branches:
              only: /.*/

      - tag:
          name: tag-alpha
          requires:
            - test-compose
          semtag: a
          filters:
            branches:
              only: develop

  release:
    jobs:
      - publish:
          context:
            - gdi-addon-python
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d*\.\d*\.\d*.*$/
      - approval-tag-beta:
          requires:
            - publish
          type: approval
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d*\.\d*\.\d*-a\.\d+/
      - tag:
          name: tag-beta
          semtag: b
          requires:
            - approval-tag-beta
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d*\.\d*\.\d*-a\.\d+/
      - approval-merge-beta-to-master:
          requires:
            - publish
          type: approval
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d*\.\d*\.\d*-b\.\d+/
      - merge-beta-to-master:
          requires:
            - approval-merge-beta-to-master
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d*\.\d*\.\d*-b\.\d+/
      - approval-tag-final-major:
          type: approval
          requires:
            - merge-beta-to-master
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d*\.\d*\.\d*-b\.\d+/
      - tag:
          name: tag-final-major
          semtag: "final -s major"
          requires:
            - approval-tag-final-major
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d*\.\d*\.\d*-b\.\d+/
      - approval-tag-final-minor:
          type: approval
          requires:
            - merge-beta-to-master
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d*\.\d*\.\d*-b\.\d+/
      - tag:
          name: tag-final-minor
          semtag: "final -s minor"
          requires:
            - approval-tag-final-minor
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d*\.\d*\.\d*-b\.\d+/
      - approval-tag-final-patch:
          type: approval
          requires:
            - merge-beta-to-master
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d*\.\d*\.\d*-b\.\d+/
      - tag:
          name: tag-final-patch
          semtag: "final -s patch"
          requires:
            - approval-tag-final-patch
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d*\.\d*\.\d*-b\.\d+/
